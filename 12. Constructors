#1. Write a class with a default constructor, one argument constructor and two argument constructors. Instantiate the class to call all the constructors of that class from a main class

class MyClass:
    def __init__(self, a=None, b=None):
        if a is None and b is None:
            print("Default constructor called")
        elif b is None:
            print(f"One-argument constructor called: a = {a}")
        else:
            print(f"Two-argument constructor called: a = {a}, b = {b}")

class Main:
    def __init__(self):
        obj1 = MyClass()          
        obj2 = MyClass(31)        
        obj3 = MyClass(31, 43)    
Main()

#2. Call the constructors(both default and argument constructors) of super class from a child class 

class Parent:
    def __init__(self, a=None):
        print(f"Parent constructor called: a = {a}")

class Child(Parent):
    pass 

obj1 = Child()      
obj2 = Child(35)   

#3. Apply private, public, protected and default access modifiers to the constructor 

class Public:
    def __init__(self):  
        print("Public constructor called")

class Protected:
    def _init_(self):  
        print("Protected constructor called")

class Private:
    def __init__(self):  
        print("Private constructor called")

obj1 = Public()         
obj2 = Protected()  
obj3 = Private()   

#4. Write a program which illustrates the concept of attributes of a constructor. 

class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
name = input("Enter name: ")
age = input("Enter age: ")
p = Person(name, age)
print(p.name, p.age)
